plugins {
	id 'fabric-loom' version '0.2.7-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

repositories {
	mavenCentral()
	mavenLocal()
	maven{ url="https://minecraft.curseforge.com/api/maven" }
	maven{ url="https://maven.fabricmc.net" }
	maven{ url="https://jitpack.io" }
	maven{ url="http://maven.sargunv.s3-website-us-west-2.amazonaws.com/" }
	maven{ url="http://server.bbkr.space:8081/artifactory/libs-release/" }
	maven{ url="https://maven.swordglowsblue.com/" }
	maven{ url="https://maven.jamieswhiteshirt.com/libs-release/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modApi("net.fabricmc.fabric-api:fabric-api:0.5.1+build.294-1.15") {
		force = true
	}

	modCompile ("me.sargunvohra.mcmods:autoconfig1u:${project.auto_config_version}") {
		exclude group :"net.fabricmc.fabric-api"
	}
	include ("me.sargunvohra.mcmods:autoconfig1u:${project.auto_config_version}") {
		exclude group :"net.fabricmc.fabric-api"
	}

	modCompile ("me.shedaniel.cloth:config-2:${project.cloth_config_version}") {
		exclude group :"net.fabricmc.fabric-api"
	}
	include ("me.shedaniel.cloth:config-2:${project.cloth_config_version}") {
		exclude group :"net.fabricmc.fabric-api"
	}

	modApi ("vampirelib:VampireLib:${project.vampirelib_version}") {
		exclude group :"net.fabricmc.fabric-api"
	}

	// For dev env testing
	modImplementation ("io.github.prospector:modmenu:${project.modmenu_version}") {
		force = true
	}

	modImplementation("me.shedaniel:RoughlyEnoughItems:${project.rei_version}") {
		exclude group: "io.github.prospector.modmenu"
		exclude group :"net.fabricmc.fabric-api"
	}

	modApi ("io.github.cottonmc:LibGui:1.3.1") {
		exclude group: "net.fabricmc.fabric-api"
		exclude group: "io.github.prospector", module: "modmenu"
	}

	compile "com.google.code.findbugs:jsr305:3.0.2"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
		mavenLocal()
	}
}
